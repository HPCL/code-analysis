CFLAGS = -O3 -fno-inline-functions -emit-llvm -S  
CC = clang 
SRCDIR = ~/xSDK/petsc/src/mat/impls/aij/seq/bas  
ROOTDIR = ~/xSDK/petsc/ 
INC_DIRS := $(shell find $(ROOTDIR)/include -type d) 
C_INC_FLAGS := $(addprefix -I,$(INC_DIRS))
TARGET = all_petsc_src 
LINKER = llvm-link 
LDFLAGS = -S 
FILT= 

OPTIMIZER = opt 
OPT_FLAGS = -disable-output -load-pass-plugin=AliasCallPointers/libAliasCallPointers.so -passes="alias-call-pointers-pass"

.PHONY: all clean 
 

OBJECTS = $(patsubst %.c, %.ll, $(filter-out $(FILT),$(shell find $(SRCDIR) -name '*.c'))) 
HEADERS = $(shell find $(SRCDIR) -name '*.h')

%.ll: %.c $(HEADERS) 
	$(CC) $(CFLAGS) $(C_INC_FLAGS) -c $< -o $@



all : $(OBJECTS)  
	for f in $(shell find $(SRCDIR) -name '*.ll'); do \
		$(OPTIMIZER) $(OPT_FLAGS) $$f; \
	done  


clean: 
	rm $(SRCDIR)/*.ll 
	rm $(SRCDIR)/*.csv


